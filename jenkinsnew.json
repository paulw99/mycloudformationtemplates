AWSTemplateFormatVersion: 2010-09-09
Description: Launches a Jenkins server.
Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.micro
      - t2.small
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.xlarge
      - m3.2xlarge
      - c1.medium
      - c1.xlarge
      - cc1.4xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  bootVolumeSize:
    Description: Size of the instances boot volume
    Default: '20'
    Type: String
  SshKey:
    Description: Name of an existing EC2 keypair to enable SSH access to the instances
    Default: your-ssh-key
    Type: 'AWS::EC2::KeyPair::KeyName'
  IPWhitelist:
    Description: IP Address to Whitelist (your IP address followed by /32)
    MinLength: '9'
    MaxLength: '18'
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  EmailAddress:
    Description: What email address will receive the default Jenkins password
    Type: String
    Default: ''
  DnsPrefix:
    Description: Prefix for Jenkins' DNS record (<prefix>.<zone>)
    Type: String
    Default: builds
  DnsZone:
    Description: Route53-hosted zone to use for the DNS record (<prefix>.<zone>)
    Type: String
    Default: your-website.com
  S3Bucket:
    Description: Existing S3 bucket to use for Jenkins backups and restores
    Type: String
    Default: your-s3-bucket
  S3Prefix:
    Description: '[Optional] Key prefix to use for Jenkins backups'
    Type: String
    Default: ''
  Subnets:
    Description: List of VPC subnet IDs for the cluster
    Type: 'List<AWS::EC2::Subnet::Id>'
  VpcId:
    Description: VPC associated with the provided subnets
    Type: 'AWS::EC2::VPC::Id'
  AdminSecurityGroup:
    Description: >-
      Existing security group that should be granted administrative access to
      Jenkins (e.g., 'sg-123456')
    Default: Primary
    Type: 'AWS::EC2::SecurityGroup::Id'
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-6869aa05
    us-west-1:
      AMI: ami-7172b611
    us-west-2:
      AMI: ami-31490d51
    eu-west-2:
      AMI: ami-01420ff79987d6197
    ap-southeast-2:
      AMI: ami-10918173
Resources:
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref LbSecurityGroup
      Type: application
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4d1ec8de-3960-4707-9b9a-84afd5fd0c64
  LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d0b5533b-a6b5-418f-b3d2-c44e78b1d26b
  DefaultTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      VpcId: !Ref VpcId
      Port: 8080
      Protocol: HTTP
      HealthCheckPath: /login
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bd84325b-d331-4dab-ab83-1fbe68848894
  CloudFormationLogs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2ffa99d7-5da0-4989-bf59-539061b45c21
  BuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d250b710-cc6c-4723-b6f9-23a1ff5c3854
  RolePolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'ec2:DescribeInstances'
              - 'ec2:TerminateInstances'
              - 'ec2:RunInstances'
              - 'ec2:StopInstances'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeImages'
              - 'ec2:StartInstances'
              - 'ec2:DescribeAvailabilityZones'
              - 'ec2:DescribeKeyPairs'
            Effect: Allow
            Resource: '*'
          - Effect: Allow
            Action: 'elasticloadbalancing:*'
            Resource: '*'
          - Effect: Allow
            Action: 'cloudwatch:*'
            Resource: '*'
          - Effect: Allow
            Action: 'autoscaling:*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:DeleteObjectTagging'
              - 's3:PutObject'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:DeleteObject'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'iam:PassRole'
              - 'iam:ListInstanceProfiles'
              - 'ec2:*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'cloudformation:DescribeStackResource'
            Resource: '*'
      Roles:
        - !Ref BuildRole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4b50253c-8a1c-43d5-bab1-1f08d01eefc6
  BuildInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BuildRole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 04f68dcf-58c3-41da-9b0c-d2ce9fd769ab
  ServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !GetAZs ''
      Tags:
        - Key: Name
          Value: pjwJenkinsScratch
          PropagateAtLaunch: true
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref DefaultTargetGroup
      VPCZoneIdentifier: !Ref Subnets
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a4607d9c-e695-4952-a1a1-fa0224cd305c
  LaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          install:
            - installConfig
          deployApps:
            - prepareRepos
            - install
            - configure
          start:
            - startServices
        installConfig:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServerInstance '
                  - '         --configsets install_all '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
            /lib/systemd/system/cfn-hup.service:
              content: !Join 
                - ''
                - - |
                    [Unit]
                  - |+
                    Description=cfn-hup daemon

                  - |
                    [Service]
                  - |
                    Type=simple
                  - |
                    ExecStart=/opt/aws/bin/cfn-hup
                  - |+
                    Restart=always

                  - |
                    [Install]
                  - WantedBy=multi-user.target
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        prepareRepos:
          commands:
            01_get_jenkins_repo:
              command: >-
                curl https://pkg.jenkins.io/redhat-stable/jenkins.repo -o
                /etc/yum.repos.d/jenkins.repo
            00_enable_rhel_repos:
              command: >-
                yum-config-manager --enable rhel-7-server-rhui-extras-rpms
                rhel-server-rhui-rhscl-7-rpms rhel-7-server-rhui-optional-rpms
            02_import_jenkins_repo:
              command: 'rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key'
        installLogs:
          commands:
            00_download_aws_logs_agent:
              command: >-
                curl
                https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
                -O
            01_configure_aws_logs_agent:
              command: >-
                source scl_source enable python27; python
                ./awslogs-agent-setup.py --region eu-west-2
            02_create_state_directory:
              command: mkdir -p /var/awslogs/state
          services:
            sysvinit:
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/awslogs/awslogs.conf
          files:
            /etc/awslogs/awslogs.conf:
              content: !Join 
                - ''
                - - |
                    [general]
                  - |
                    state_file= /var/awslogs/state/agent-state
                  - |
                    [/var/log/cloud-init.log]
                  - |
                    file = /var/log/cloud-init.log
                  - 'log_group_name = '
                  - !Ref CloudFormationLogs
                  - |+

                  - |
                    log_stream_name = {instance_id}/cloud-init.log
                  - |
                    datetime_format = 
                  - |
                    [/var/log/cloud-init-output.log]
                  - |
                    file = /var/log/cloud-init-output.log
                  - 'log_group_name = '
                  - !Ref CloudFormationLogs
                  - |+

                  - |
                    log_stream_name = {instance_id}/cloud-init-output.log
                  - |
                    datetime_format = 
                  - |
                    [/var/log/cfn-init.log]
                  - |
                    file = /var/log/cfn-init.log
                  - 'log_group_name = '
                  - !Ref CloudFormationLogs
                  - |+

                  - |
                    log_stream_name = {instance_id}/cfn-init.log
                  - |
                    datetime_format = 
                  - |
                    [/var/log/cfn-hup.log]
                  - |
                    file = /var/log/cfn-hup.log
                  - 'log_group_name = '
                  - !Ref CloudFormationLogs
                  - |+

                  - |
                    log_stream_name = {instance_id}/cfn-hup.log
                  - |
                    datetime_format = 
                  - |
                    [/var/log/cfn-wire.log]
                  - |
                    file = /var/log/cfn-wire.log
                  - 'log_group_name = '
                  - !Ref CloudFormationLogs
                  - |+

                  - |
                    log_stream_name = {instance_id}/cfn-wire.log
                  - |
                    datetime_format = 
                  - |
                    [/var/log/httpd]
                  - |
                    file = /var/log/httpd/*
                  - 'log_group_name = '
                  - !Ref CloudFormationLogs
                  - |+

                  - |
                    log_stream_name = {instance_id}/httpd
                  - |
                    datetime_format = %d/%b/%Y:%H:%M:%S
              mode: '000444'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Join 
                - ''
                - - |
                    [plugins]
                  - |
                    cwlogs = cwlogs
                  - |
                    [default]
                  - 'region = '
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000444'
              owner: root
              group: root
        install:
          packages:
            yum:
              rh-git218: []
              jenkins: []
              java-1.8.0-openjdk.x86_64: []
          commands:
            setJava:
              command: >-
                sudo /usr/sbin/alternatives --set java
                /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java || true
            setJavac:
              command: >-
                sudo /usr/sbin/alternatives --set javac
                /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/javac || true
            removeJava1.7:
              command: 'yum remove java-1.7 || true '
            create_JenkinsDir:
              command: mkdir -p /var/lib/jenkins
        configure:
          files:
            /usr/local/bin/jenkins-restore:
              content: !Join 
                - |+

                - - '#!/bin/bash -e'
                  - ''
                  - 'USAGE="Usage: $0 S3_TARGET JENKINS_HOME\n'
                  - \n
                  - 'Example:\n'
                  - >-
                    $0 s3://mybucket/jenkins/jenkins-201405011901.tar.gz
                    /var/lib/jenkins\n
                  - \n
                  - >-
                    If S3_TARGET is a directory, restore from the newest file.
                    Make sure to include the trailing slash:\n
                  - '$0 s3://mybucket/jenkins/ /var/lib/jenkins"'
                  - ''
                  - S3_TARGET=$1
                  - JENKINS_HOME=$2
                  - source /opt/rh/python27/enable
                  - 'if [[ -z "`echo $S3_TARGET|grep ''^s3://''`" ]]; then'
                  - '    echo -e $USAGE'
                  - '    exit 1'
                  - fi
                  - ''
                  - 'if [[ "$S3_TARGET" == */ ]]; then'
                  - '    S3_TARGET=$S3_TARGET`aws s3 ls $S3_TARGET|tail -1|awk ''{print $NF}''`'
                  - fi
                  - ''
                  - LOCAL_BACKUP=/tmp/`basename $S3_TARGET`
                  - aws s3 cp $S3_TARGET $LOCAL_BACKUP
                  - ''
                  - rm -rf $JENKINS_HOME
                  - '#if [[ -d "$JENKINS_HOME" ]]; then'
                  - '#    read -p "Delete existing $JENKINS_HOME? (y/n) " -n 1 -r'
                  - '#    echo'
                  - '#    if [[ $REPLY =~ ^[Yy]$ ]]; then'
                  - '#        rm -rf $JENKINS_HOME'
                  - '#    else'
                  - '#        echo "Bailing out"'
                  - '#        exit 1'
                  - '#    fi'
                  - '#fi'
                  - ''
                  - mkdir -p $JENKINS_HOME
                  - tar zxf $LOCAL_BACKUP -C $JENKINS_HOME
                  - rm -f $LOCAL_BACKUP
                  - ''
              mode: '000755'
              owner: root
              group: root
            /usr/local/bin/jenkins-backup:
              content: !Join 
                - |+

                - - '#!/bin/bash -e'
                  - ''
                  - 'USAGE="Usage: $0 JENKINS_HOME S3_TARGET\n'
                  - \n
                  - 'Examples:\n'
                  - >-
                    $0 /var/lib/jenkins
                    s3://mybucket/jenkins/jenkins-201405011901.tar.gz"
                  - ''
                  - source /opt/rh/python27/enable
                  - JENKINS_HOME=$1
                  - S3_TARGET=$2
                  - >-
                    if [[ -z "`echo $S3_TARGET|grep '^s3://'`" || ! -d
                    "$JENKINS_HOME" ]]; then
                  - '    echo -e $USAGE'
                  - '    exit 1'
                  - fi
                  - ''
                  - LOCAL_BACKUP=/tmp/`basename $S3_TARGET`
                  - ''
                  - tar -C $JENKINS_HOME -zcf $LOCAL_BACKUP .\
                  - '    --exclude "config-history/" \'
                  - '    --exclude "config-history/*" \'
                  - '    --exclude "jobs/*/workspace*" \'
                  - '    --exclude "jobs/*/builds/*/archive" \'
                  - '    --exclude "plugins/*/*" \'
                  - '    --exclude "plugins/*.bak" \'
                  - '    --exclude "war" \'
                  - '    --exclude "cache"'
                  - ''
                  - aws s3 cp $LOCAL_BACKUP $S3_TARGET
                  - rm -f $LOCAL_BACKUP
              mode: '000755'
              owner: root
              group: root
            /etc/cron.daily/jenkins:
              content: !Join 
                - |+

                - - |
                    #!/bin/bash
                  - |
                    AWS_CONFIG_FILE=/etc/aws.conf
                  - |
                    PATH=/bin:/usr/bin::/usr/local/bin
                  - >
                    source /usr/local/bin/jenkins-backup /var/lib/jenkins
                    s3://{{s3_bucket}}/{{s3_prefix}}jenkins-`date
                    +\%Y\%m\%d\%H\%M.tar.gz` >> ~/jenkins.cron.log 2>&1
                  - >
                    sleep 60 && aws ec2 terminate-instances --instance-ids
                    $(curl -s
                    http://169.254.169.254/latest/meta-data/instance-id)
                  - |+

              context:
                s3_bucket: !Ref S3Bucket
                s3_prefix: !Ref S3Prefix
              mode: '000755'
              owner: root
              group: root
            /etc/profile.d/enablepython27.sh:
              content: !Join 
                - |+

                - - |
                    #!/bin/bash
                  - |
                    source scl_source enable python27
              mode: '000755'
              owner: root
              group: root
          commands:
            setJava:
              command: >-
                /usr/sbin/alternatives --set java
                /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java || true
            restoreJenkinsFromBackup:
              command: >-
                /usr/local/bin/jenkins-restore s3://pjwbucket/jenkins/
                /var/lib/jenkins
            DirectoryOwnership:
              command: 'chown -R jenkins:jenkins /var/lib/jenkins'
            setDirectoryPermissions:
              command: chmod -R 755 /var/lib/jenkins
          services:
            sysvinit:
              jenkins:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /var/lib/jenkins/config.xml
                sources:
                  - /var/lib/jenkins
        startServices:
          commands:
            restartJenkins:
              command: systemctl restart jenkins
            sleep:
              command: sleep 400
      'AWS::CloudFormation::Designer':
        id: 2c520b71-85af-40fd-af3b-efbdfdab356c
    Properties:
      KeyName: !Ref SshKey
      IamInstanceProfile: !Ref BuildInstanceProfile
      ImageId: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref bootVolumeSize
      SecurityGroups:
        - !Ref ServerSecurityGroup
        - !Ref AdminSecurityGroup
      InstanceType: !Ref InstanceType
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              set -x
            - |
              exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1
            - |
              echo BEGIN
            - |
              date '+%Y-%m-%d %H:%M:%S'
            - >
              yum-config-manager --enable rhel-server-rhui-rhscl-7-rpms
              rhui-rhel-server-optional rhui-rhel-server-extras
            - |
              yum update -y
            - |
              yum install -y python python27-python-pip python-setuptools wget
            - |
              [ -f /opt/rh/python27/enable ] && source /opt/rh/python27/enable
            - |
              pip install --upgrade pip &> /dev/null
            - |
              pip install awscli --ignore-installed six &> /dev/null
            - |
              mkdir -p /opt/aws/bin
            - >
              wget
              https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - >
              easy_install --script-dir /opt/aws/bin
              aws-cfn-bootstrap-latest.tar.gz
            - |
              # Helper function
            - |
              function error_exit
            - |
              {
            - '  cfn-signal -e 1 -r "$1" '''
            - !Ref WaitHandle
            - |
              '
            - |2
                exit 1
            - |
              }
            - '/opt/aws/bin/cfn-init --stack '
            - !Ref 'AWS::StackName'
            - '    --resource LaunchConfig'
            - '    --configsets install,deployApps'
            - '    --role '
            - !Ref BuildRole
            - '    --region '
            - !Ref 'AWS::Region'
            - |2
               || error_exit 'Failed to run cfn-init'
            - |
              # Post-cfn work
            - |
              # All is well, signal success
            - >-
              ./opt/aws/bin/cfn-signal --exit-code 0 --reason "Stack setup
              complete" '
            - !Ref WaitHandle
            - |
              '
            - '#EOF'
  LbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Jenkins LBs
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0d6cda3f-f793-4c9a-a1a9-59a33fcf63cd
  ServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Jenkins servers
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref IPWhitelist
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a28bfcf3-c7ac-4801-8eb6-e56c21a581d0
  DnsRecord:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Join 
        - ''
        - - !Ref DnsZone
          - .
      Name: !Join 
        - ''
        - - !Ref DnsPrefix
          - .
          - !Ref DnsZone
          - .
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt 
          - LoadBalancer
          - DNSName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ca768a32-68a2-4a34-959a-156aca78e9ea
  WaitHandle:
    Type: 'AWS::CloudFormation::WaitConditionHandle'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e5ac535a-38a3-4c8a-90c3-1d18ff0aeef5
Outputs:
  DnsAddress:
    Description: Jenkins URL
    Value: !Join 
      - ''
      - - 'http://'
        - !Ref DnsRecord
Metadata:
  'AWS::CloudFormation::Designer':
    e5ac535a-38a3-4c8a-90c3-1d18ff0aeef5:
      size:
        width: 60
        height: 60
      position:
        x: 270
        'y': 90
      z: 1
      embeds: []
    a28bfcf3-c7ac-4801-8eb6-e56c21a581d0:
      size:
        width: 60
        height: 60
      position:
        x: 310
        'y': 430
      z: 1
      embeds: []
    0d6cda3f-f793-4c9a-a1a9-59a33fcf63cd:
      size:
        width: 60
        height: 60
      position:
        x: 620
        'y': 160
      z: 1
      embeds: []
    ca768a32-68a2-4a34-959a-156aca78e9ea:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 200
      z: 1
      embeds: []
    d250b710-cc6c-4723-b6f9-23a1ff5c3854:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 330
      z: 1
      embeds: []
    04f68dcf-58c3-41da-9b0c-d2ce9fd769ab:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 330
      z: 1
      embeds: []
      isassociatedwith:
        - d250b710-cc6c-4723-b6f9-23a1ff5c3854
    2c520b71-85af-40fd-af3b-efbdfdab356c:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 330
      z: 1
      embeds: []
      isassociatedwith:
        - a28bfcf3-c7ac-4801-8eb6-e56c21a581d0
    a4607d9c-e695-4952-a1a1-fa0224cd305c:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 430
      z: 1
      embeds: []
      isassociatedwith:
        - 2c520b71-85af-40fd-af3b-efbdfdab356c
        - bd84325b-d331-4dab-ab83-1fbe68848894
    4b50253c-8a1c-43d5-bab1-1f08d01eefc6:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 450
      z: 1
      embeds: []
      isassociatedwith:
        - d250b710-cc6c-4723-b6f9-23a1ff5c3854
    2ffa99d7-5da0-4989-bf59-539061b45c21:
      size:
        width: 150
        height: 150
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    bd84325b-d331-4dab-ab83-1fbe68848894:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 430
      z: 1
      embeds: []
    4d1ec8de-3960-4707-9b9a-84afd5fd0c64:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 160
      z: 1
      embeds: []
      isassociatedwith:
        - 0d6cda3f-f793-4c9a-a1a9-59a33fcf63cd
    d0b5533b-a6b5-418f-b3d2-c44e78b1d26b:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 320
      z: 1
      embeds: []
      isassociatedwith:
        - 4d1ec8de-3960-4707-9b9a-84afd5fd0c64
